/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -c OrgNemoTransferEngine -p org.nemo.transferengine.h:org.nemo.transferengine.cpp -i transfermethodinfo.h org.nemo.transferengine.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef ORG_NEMO_TRANSFERENGINE_H_1419432006
#define ORG_NEMO_TRANSFERENGINE_H_1419432006

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "transfermethodinfo.h"

/*
 * Proxy class for interface org.nemo.transferengine
 */
class OrgNemoTransferEngine: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.nemo.transferengine"; }

public:
    OrgNemoTransferEngine(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgNemoTransferEngine();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<TransferMethodInfoList> transferMethods()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("transferMethods"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void transferMethodListChanged();
};

namespace org {
  namespace nemo {
    typedef ::OrgNemoTransferEngine transferengine;
  }
}
#endif
